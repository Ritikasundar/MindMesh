{"ast":null,"code":"import React,{useState}from\"react\";import{Box,MenuItem,Select,InputLabel,FormControl,Button,TextField,Card,Typography,Dialog,DialogTitle,DialogContent,DialogActions}from\"@mui/material\";import axios from'axios';import{getStorage,ref,getDownloadURL}from\"firebase/storage\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function MainApp(){const[inputType,setInputType]=useState(\"pdf\");const[file,setFile]=useState(null);const[url,setUrl]=useState(\"\");const[openDialog,setOpenDialog]=useState(false);const[preview,setPreview]=useState(\"\");const[loading,setLoading]=useState(false);// Loading state\nconst[errorMessage,setErrorMessage]=useState(\"\");// Error message\nconst[message,setMessage]=useState('');const[showUrlButton,setShowUrlButton]=useState(false);const[showDownloadButton,setShowDownloadButton]=useState(false);const[showSummaryButton,setShowSummaryButton]=useState(false);const[loadingComment,setLoadingComment]=useState(\"\");const[summary,setSummary]=useState(`Welcome to MindMesh.\n\nFeatures:\n    - Upload PDFs, images, URLs or text files.\n    - Generate summaries with ease.\n    - Create mind maps from summarized content.\n\nInstructions:\n    1. Choose your input method.\n    2. Upload your file or enter a URL.\n    3. Click 'Generate Summary' to view a concise description.\n    4. Draw and download the mind map of your summary.`);const handleInputChange=event=>{setInputType(event.target.value);setFile(null);setUrl(\"\");setPreview(\"\");setErrorMessage(\"\");// Reset error message\n};const handleFileChange=event=>{const selectedFile=event.target.files[0];setFile(selectedFile);setErrorMessage(\"\");// Reset error message\nif(inputType===\"image\"){const imageUrl=URL.createObjectURL(selectedFile);setPreview(imageUrl);}else if(inputType===\"txt\"){const reader=new FileReader();reader.onload=()=>setPreview(reader.result);reader.readAsText(selectedFile);}else if(inputType===\"pdf\"){const reader=new FileReader();reader.onload=()=>{setPreview(\"PDF file uploaded: \"+selectedFile.name);};reader.readAsArrayBuffer(selectedFile);}};const handleUrlChange=event=>{setUrl(event.target.value);setPreview(event.target.value);setErrorMessage(\"\");// Reset error message\n};const handleGenerate=async()=>{setLoading(true);// Set loading state\nsetLoadingComment(\"⏳ Loading your data...\");setErrorMessage(\"\");// Reset error message\ntry{if(inputType===\"pdf\"&&file){const formData=new FormData();formData.append(\"pdf\",file);await axios.post(\"http://localhost:5000/upload-pdf\",formData,{headers:{'Content-Type':'multipart/form-data'}});setMessage(`PDF file \"${file.name}\" uploaded successfully.`);setOpenDialog(true);}else if(inputType===\"url\"&&url){const response=await axios.post(\"http://localhost:5000/scrape\",{url});const blob=new Blob([response.data],{type:\"text/plain\"});const link=document.createElement(\"a\");link.href=window.URL.createObjectURL(blob);//link.download = \"scraped_data.txt\";\nlink.click();setMessage(\"URL data scraped and downloaded successfully.\");setOpenDialog(true);}else if(inputType===\"image\"&&file){const formData=new FormData();formData.append(\"image\",file);await axios.post(\"http://localhost:5000/extract-text\",formData,{headers:{'Content-Type':'multipart/form-data'}});setMessage(`Image \"${file.name}\" uploaded successfully.`);setOpenDialog(true);}else if(inputType===\"txt\"&&file){const formData=new FormData();formData.append(\"txt\",file);await axios.post(\"http://localhost:5000/upload-txt\",formData,{headers:{'Content-Type':'multipart/form-data'}});setMessage(`Text file \"${file.name}\" uploaded successfully.`);setOpenDialog(true);}else{setMessage(\"Please upload a file or enter a URL.\");setOpenDialog(true);}}catch(error){console.error(\"Error:\",error);setErrorMessage(\"Failed to process your request. Please try again.\");}finally{setLoading(false);// Reset loading state\nsetInputType(\"\");// Reset input type\nsetFile(null);// Reset file\nsetUrl(\"\");// Reset URL\nsetPreview(\"\");// Reset preview\n}};const handleCreate=async()=>{setLoading(true);// Set loading state\nsetLoadingComment(\"💭 Pondering Over It...\");setErrorMessage(\"\");// Reset error message\ntry{const response=await axios.post(\"http://localhost:5000/run-process-file\");setSummary(response.data);// Show success message or output\nsetShowSummaryButton(true);}catch(error){console.error(\"Error:\",error);setErrorMessage(\"Failed to run the process. Please try again.\");}finally{setLoading(false);// Reset loading state\n}};const handleDrawMindMap=async()=>{setLoading(true);setLoadingComment(\"🚀 Taking Off...\");setErrorMessage(\"\");try{const response=await axios.post(\"http://localhost:5000/generate-mind-map\");setMessage(`Mind map created.Click view Mind map to view it`);setOpenDialog(true);setShowUrlButton(true);setShowDownloadButton(true);}catch(error){console.error(\"Error:\",error);setErrorMessage(\"Failed to generate mind map. Please try again.\");}finally{setLoading(false);}};/*const handleViewSummary = async () => {\r\n  setLoading(true);\r\n  setErrorMessage(\"\");\r\n\r\n  try {\r\n    const response = await axios.get(\"http://localhost:5000/get-summary\");\r\n    setSummary(response.data);\r\n    // You can remove the alert line to avoid popups\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    setErrorMessage(\"Failed to retrieve summary. Please try again.\");\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};*/// Call this function on the appropriate event, like onClick\nconst handleCloseDialog=()=>{setOpenDialog(false);// Close the dialog\n};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"header\",{className:\"header\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"logo\",children:\"MindMesh\"})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'flex-start',minHeight:'100vh',padding:14,maxWidth:1800,margin:'auto',gap:14},children:[/*#__PURE__*/_jsxs(Card,{variant:\"outlined\",sx:{padding:7,borderRadius:4,boxShadow:2,width:'100%',flex:1,// Adjust to fill the space\nmr:2// Margin to the right\n},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-around',mb:3},children:[/*#__PURE__*/_jsxs(Button,{variant:inputType===\"pdf\"?\"contained\":\"outlined\",color:\"secondary\",onClick:()=>setInputType(\"pdf\"),sx:{display:'flex',flexDirection:'column',alignItems:'center',minWidth:'40px',minHeight:'20px',fontSize:'14px',textTransform:'none',fontFamily:'Poppins, sans-serif'},children:[/*#__PURE__*/_jsx(\"img\",{src:require('./images/pd.png')// Replace with the correct path to your image\n,alt:\"PDF\",style:{width:'40px',height:'40px',marginBottom:'5px'}// Style the image\n}),\"PDF\"]}),/*#__PURE__*/_jsxs(Button,{variant:inputType===\"url\"?\"contained\":\"outlined\",color:\"secondary\",onClick:()=>setInputType(\"url\"),sx:{display:'flex',flexDirection:'column',alignItems:'center',fontSize:'14px',textTransform:'none',fontFamily:'Poppins, sans-serif'},children:[/*#__PURE__*/_jsx(\"img\",{src:require('./images/search-engine.png')// Replace with the correct path to your image\n,alt:\"PDF\",style:{width:'40px',height:'40px',marginBottom:'5px'}// Style the image\n}),\"URL\"]}),/*#__PURE__*/_jsxs(Button,{variant:inputType===\"image\"?\"contained\":\"outlined\",color:\"secondary\",onClick:()=>setInputType(\"image\"),sx:{display:'flex',flexDirection:'column',alignItems:'center',fontSize:'14px',textTransform:'none',fontFamily:'Poppins, sans-serif'},children:[/*#__PURE__*/_jsx(\"img\",{src:require('./images/image-file.png')// Replace with the correct path to your image\n,alt:\"PDF\",style:{width:'40px',height:'40px',marginBottom:'5px'}// Style the image\n}),\"Image\"]}),/*#__PURE__*/_jsxs(Button,{variant:inputType===\"txt\"?\"contained\":\"outlined\",color:\"secondary\",onClick:()=>setInputType(\"txt\"),sx:{display:'flex',flexDirection:'column',alignItems:'center',fontSize:'14px',textTransform:'none',fontFamily:'Poppins, sans-serif'},children:[/*#__PURE__*/_jsx(\"img\",{src:require('./images/image.png')// Replace with the correct path to your image\n,alt:\"PDF\",style:{width:'40px',height:'40px',marginBottom:'5px'}// Style the image\n}),\"Text\"]})]}),inputType===\"url\"&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(TextField,{label:\"Enter Website URL\",variant:\"outlined\",fullWidth:true,value:url,onChange:handleUrlChange,placeholder:\"https://example.com\",sx:{mb:2}}),url&&/*#__PURE__*/_jsxs(Typography,{children:[\"URL Entered: \",/*#__PURE__*/_jsx(\"a\",{href:url,target:\"_blank\",rel:\"noopener noreferrer\",children:url})]})]}),inputType===\"image\"&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(\"input\",{accept:\"image/*\",type:\"file\",onChange:handleFileChange,style:{margin:'10px 0'}}),preview&&/*#__PURE__*/_jsx(\"img\",{src:preview,alt:\"Preview\",style:{width:'100%',height:'auto'}})]}),inputType===\"pdf\"&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(\"input\",{accept:\"application/pdf\",type:\"file\",onChange:handleFileChange,style:{margin:'10px 0'}}),preview&&/*#__PURE__*/_jsx(Typography,{children:preview})]}),inputType===\"txt\"&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(\"input\",{accept:\".txt\",type:\"file\",onChange:handleFileChange,style:{margin:'10px 0'}}),preview&&/*#__PURE__*/_jsxs(Typography,{children:[\"File Preview: \",preview]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:4},children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",fullWidth:true,onClick:handleGenerate,children:\"Load Data\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",fullWidth:true,sx:{mt:2},onClick:handleCreate,children:\"Generate Summary\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",fullWidth:true,sx:{mt:2},onClick:handleDrawMindMap,children:\"Draw Mind Map\"}),showUrlButton&&/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",fullWidth:true,sx:{mt:2},href:\"https://firebasestorage.googleapis.com/v0/b/mindmapwebsitepdf.appspot.com/o/mindmap%2Fmind_map.png?alt=media&token=f9d85688-56e2-4150-b081-53731fbabd96\",target:\"_blank\",children:\"View Mind Map\"})]}),loading&&/*#__PURE__*/_jsx(Typography,{sx:{mt:2},children:loadingComment})]}),/*#__PURE__*/_jsxs(Card,{variant:\"outlined\",sx:{width:'auto',// Auto width to expand based on content\nmaxWidth:'2200px',// Set a maximum width if needed\npadding:7,borderRadius:4,boxShadow:2,overflowX:'auto',// Enable horizontal scrolling\noverflowY:'hidden',// Disable vertical scrolling\nflex:1,// Adjust to fill the space\nwhiteSpace:'nowrap'// Prevent text from wrapping, forcing horizontal scroll\n},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Summary\"}),/*#__PURE__*/_jsx(\"pre\",{children:summary})]}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:handleCloseDialog,PaperProps:{sx:{borderRadius:4,// Rounded corners\npadding:3,// Adds padding for spacing\nboxShadow:'0px 8px 24px rgba(0, 0, 0, 0.15)',// Elegant shadow\nmaxWidth:'500px',// Set max width\nbackgroundColor:'#f4f6f8',// Light background color\ntransition:'all 0.3s ease-in-out'// Smooth transition\n}},TransitionProps:{onEnter:()=>console.log('Entering...')},children:[/*#__PURE__*/_jsx(DialogTitle,{sx:{textAlign:'center',fontSize:'1.5rem',fontWeight:'600',color:'#333',paddingBottom:'0.5rem',fontFamily:'Poppins'},children:\"\\uD83C\\uDF89 Mission Accomplished!\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',gap:2},children:/*#__PURE__*/_jsx(Typography,{sx:{textAlign:'center',fontSize:'1.1rem',color:'#666',fontFamily:'Poppins'},children:message})})}),/*#__PURE__*/_jsx(DialogActions,{sx:{justifyContent:'center'// Centers the button horizontally\n},children:/*#__PURE__*/_jsx(Button,{onClick:handleCloseDialog,sx:{backgroundColor:'#1976d2',// Primary color\ncolor:'#fff',// White text\nborderRadius:'20px',// Rounded button\npadding:'0.5rem 1.5rem','&:hover':{backgroundColor:'#1565c0'// Darker blue on hover\n},fontSize:'1rem',// Make text larger\ntextTransform:'none',// Keep button text normal\nboxShadow:'0px 4px 12px rgba(0, 0, 0, 0.2)'// Button shadow\n},children:\"OK\"})})]})]})]});}export default MainApp;","map":{"version":3,"names":["React","useState","Box","MenuItem","Select","InputLabel","FormControl","Button","TextField","Card","Typography","Dialog","DialogTitle","DialogContent","DialogActions","axios","getStorage","ref","getDownloadURL","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MainApp","inputType","setInputType","file","setFile","url","setUrl","openDialog","setOpenDialog","preview","setPreview","loading","setLoading","errorMessage","setErrorMessage","message","setMessage","showUrlButton","setShowUrlButton","showDownloadButton","setShowDownloadButton","showSummaryButton","setShowSummaryButton","loadingComment","setLoadingComment","summary","setSummary","handleInputChange","event","target","value","handleFileChange","selectedFile","files","imageUrl","URL","createObjectURL","reader","FileReader","onload","result","readAsText","name","readAsArrayBuffer","handleUrlChange","handleGenerate","formData","FormData","append","post","headers","response","blob","Blob","data","type","link","document","createElement","href","window","click","error","console","handleCreate","handleDrawMindMap","handleCloseDialog","children","className","sx","display","justifyContent","alignItems","minHeight","padding","maxWidth","margin","gap","variant","borderRadius","boxShadow","width","flex","mr","mb","color","onClick","flexDirection","minWidth","fontSize","textTransform","fontFamily","src","require","alt","style","height","marginBottom","label","fullWidth","onChange","placeholder","rel","accept","mt","overflowX","overflowY","whiteSpace","gutterBottom","open","onClose","PaperProps","backgroundColor","transition","TransitionProps","onEnter","log","textAlign","fontWeight","paddingBottom"],"sources":["D:/import-file-app-new/import-file-app/src/MainApp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, MenuItem, Select, InputLabel, FormControl, Button, TextField, Card, Typography, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\nimport axios from 'axios';\r\nimport { getStorage, ref, getDownloadURL } from \"firebase/storage\";\r\n\r\n\r\nfunction MainApp() {\r\n  const [inputType, setInputType] = useState(\"pdf\");\r\n  const [file, setFile] = useState(null);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [preview, setPreview] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);  // Loading state\r\n  const [errorMessage, setErrorMessage] = useState(\"\");  // Error message\r\n  const [message, setMessage] = useState('');\r\n  const [showUrlButton, setShowUrlButton] = useState(false); \r\n  const [showDownloadButton, setShowDownloadButton] = useState(false);\r\n  const [showSummaryButton, setShowSummaryButton] = useState(false); \r\n  const [loadingComment, setLoadingComment] = useState(\"\");\r\n  const [summary,setSummary] = useState(`Welcome to MindMesh.\r\n\r\nFeatures:\r\n    - Upload PDFs, images, URLs or text files.\r\n    - Generate summaries with ease.\r\n    - Create mind maps from summarized content.\r\n\r\nInstructions:\r\n    1. Choose your input method.\r\n    2. Upload your file or enter a URL.\r\n    3. Click 'Generate Summary' to view a concise description.\r\n    4. Draw and download the mind map of your summary.` );\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputType(event.target.value);\r\n    setFile(null);\r\n    setUrl(\"\");\r\n    setPreview(\"\");\r\n    setErrorMessage(\"\");  // Reset error message\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    setFile(selectedFile);\r\n    setErrorMessage(\"\");  // Reset error message\r\n\r\n    if (inputType === \"image\") {\r\n      const imageUrl = URL.createObjectURL(selectedFile);\r\n      setPreview(imageUrl);\r\n    } else if (inputType === \"txt\") {\r\n      const reader = new FileReader();\r\n      reader.onload = () => setPreview(reader.result);\r\n      reader.readAsText(selectedFile);\r\n    } else if (inputType === \"pdf\") {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        setPreview(\"PDF file uploaded: \" + selectedFile.name);\r\n      };\r\n      reader.readAsArrayBuffer(selectedFile);\r\n    }\r\n  };\r\n\r\n  const handleUrlChange = (event) => {\r\n    setUrl(event.target.value);\r\n    setPreview(event.target.value);\r\n    setErrorMessage(\"\");  // Reset error message\r\n  };\r\n\r\n  const handleGenerate = async () => {\r\n    setLoading(true);  // Set loading state\r\n    setLoadingComment(\"⏳ Loading your data...\");\r\n    setErrorMessage(\"\");  // Reset error message\r\n\r\n    try {\r\n      if (inputType === \"pdf\" && file) {\r\n        const formData = new FormData();\r\n        formData.append(\"pdf\", file);\r\n        await axios.post(\"http://localhost:5000/upload-pdf\", formData, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n        setMessage(`PDF file \"${file.name}\" uploaded successfully.`);\r\n        setOpenDialog(true);\r\n\r\n      } else if (inputType === \"url\" && url) {\r\n        const response = await axios.post(\"http://localhost:5000/scrape\", { url });\r\n        const blob = new Blob([response.data], { type: \"text/plain\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = window.URL.createObjectURL(blob);\r\n        //link.download = \"scraped_data.txt\";\r\n        link.click();\r\n        setMessage(\"URL data scraped and downloaded successfully.\");\r\n        setOpenDialog(true);\r\n      } else if (inputType === \"image\" && file) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n        await axios.post(\"http://localhost:5000/extract-text\", formData, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n        setMessage(`Image \"${file.name}\" uploaded successfully.`);\r\n        setOpenDialog(true); \r\n\r\n      } else if (inputType === \"txt\" && file) {\r\n        const formData = new FormData();\r\n        formData.append(\"txt\", file);\r\n        await axios.post(\"http://localhost:5000/upload-txt\", formData, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n        setMessage(`Text file \"${file.name}\" uploaded successfully.`);\r\n        setOpenDialog(true); \r\n      } else {\r\n        setMessage(\"Please upload a file or enter a URL.\");\r\n        setOpenDialog(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setErrorMessage(\"Failed to process your request. Please try again.\");\r\n    } finally {\r\n      setLoading(false);  // Reset loading state\r\n      setInputType(\"\");  // Reset input type\r\n      setFile(null);  // Reset file\r\n      setUrl(\"\");  // Reset URL\r\n      setPreview(\"\");  // Reset preview\r\n    }\r\n  };\r\n\r\n  \r\n  const handleCreate = async () => {\r\n    setLoading(true);  // Set loading state\r\n    setLoadingComment(\"💭 Pondering Over It...\");\r\n    setErrorMessage(\"\");  // Reset error message\r\n\r\n    try {\r\n        const response = await axios.post(\"http://localhost:5000/run-process-file\");\r\n        setSummary(response.data);\r\n         // Show success message or output\r\n        setShowSummaryButton(true);\r\n\r\n    } catch (error) {\r\n        console.error(\"Error:\", error);\r\n        setErrorMessage(\"Failed to run the process. Please try again.\");\r\n    } finally {\r\n        setLoading(false);  // Reset loading state\r\n    }\r\n};\r\n\r\n\r\nconst handleDrawMindMap = async () => {\r\n  setLoading(true);\r\n  setLoadingComment(\"🚀 Taking Off...\");\r\n  setErrorMessage(\"\");\r\n\r\n  try {\r\n    const response = await axios.post(\"http://localhost:5000/generate-mind-map\");\r\n    setMessage(`Mind map created.Click view Mind map to view it`);\r\n    setOpenDialog(true); \r\n    setShowUrlButton(true);\r\n    setShowDownloadButton(true);\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    setErrorMessage(\"Failed to generate mind map. Please try again.\");\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n/*const handleViewSummary = async () => {\r\n  setLoading(true);\r\n  setErrorMessage(\"\");\r\n\r\n  try {\r\n    const response = await axios.get(\"http://localhost:5000/get-summary\");\r\n    setSummary(response.data);\r\n    // You can remove the alert line to avoid popups\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    setErrorMessage(\"Failed to retrieve summary. Please try again.\");\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};*/\r\n\r\n// Call this function on the appropriate event, like onClick\r\nconst handleCloseDialog = () => {\r\n  setOpenDialog(false);  // Close the dialog\r\n};\r\n\r\n\r\nreturn (\r\n  <>\r\n    <header className=\"header\">\r\n      <h1 className=\"logo\">MindMesh</h1>\r\n    </header>\r\n    <Box \r\n      sx={{ \r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'flex-start',\r\n        minHeight: '100vh', \r\n        padding: 14, \r\n        maxWidth: 1800, \r\n        margin: 'auto' ,\r\n        gap: 14\r\n      }}\r\n    >\r\n      <Card \r\n        variant=\"outlined\" \r\n        sx={{ \r\n          padding: 7,\r\n          borderRadius: 4, \r\n          boxShadow: 2,\r\n          width: '100%',\r\n          flex: 1, // Adjust to fill the space\r\n          mr: 2 // Margin to the right\r\n        }}\r\n      >\r\n         \r\n        \r\n        <Box sx={{ display: 'flex', justifyContent: 'space-around', mb: 3 }}>\r\n          <Button \r\n            variant={inputType === \"pdf\" ? \"contained\" : \"outlined\"} \r\n            color=\"secondary\" \r\n            onClick={() => setInputType(\"pdf\")}\r\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' ,minWidth: '40px',minHeight: '20px',fontSize: '14px',textTransform: 'none', fontFamily: 'Poppins, sans-serif'}}\r\n          >\r\n            <img \r\n              src={require('./images/pd.png')} // Replace with the correct path to your image\r\n              alt=\"PDF\"\r\n              style={{ width: '40px', height: '40px', marginBottom: '5px' }} // Style the image\r\n            />\r\n            PDF\r\n          </Button>\r\n          <Button \r\n            variant={inputType === \"url\" ? \"contained\" : \"outlined\"} \r\n            color=\"secondary\" \r\n            onClick={() => setInputType(\"url\")}\r\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center',fontSize: '14px',textTransform: 'none', fontFamily: 'Poppins, sans-serif' }}\r\n          >\r\n            <img \r\n              src={require('./images/search-engine.png')} // Replace with the correct path to your image\r\n              alt=\"PDF\"\r\n              style={{ width: '40px', height: '40px', marginBottom: '5px' }} // Style the image\r\n            />\r\n            URL\r\n          </Button>\r\n          <Button \r\n            variant={inputType === \"image\" ? \"contained\" : \"outlined\"} \r\n            color=\"secondary\" \r\n            onClick={() => setInputType(\"image\")}\r\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center',fontSize: '14px' ,textTransform: 'none', fontFamily: 'Poppins, sans-serif'}} \r\n          >\r\n            <img \r\n              src={require('./images/image-file.png')} // Replace with the correct path to your image\r\n              alt=\"PDF\"\r\n              style={{ width: '40px', height: '40px', marginBottom: '5px' }} // Style the image\r\n            />\r\n            Image\r\n          </Button>\r\n          <Button \r\n            variant={inputType === \"txt\" ? \"contained\" : \"outlined\"} \r\n            color=\"secondary\" \r\n            onClick={() => setInputType(\"txt\")}\r\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center',fontSize: '14px',textTransform: 'none', fontFamily: 'Poppins, sans-serif' }} \r\n          >\r\n             <img \r\n              src={require('./images/image.png')} // Replace with the correct path to your image\r\n              alt=\"PDF\"\r\n              style={{ width: '40px', height: '40px', marginBottom: '5px' }} // Style the image\r\n            />\r\n            Text\r\n          </Button>\r\n        </Box>\r\n\r\n        {inputType === \"url\" && (\r\n          <Box>\r\n            <TextField \r\n              label=\"Enter Website URL\" \r\n              variant=\"outlined\" \r\n              fullWidth \r\n              value={url} \r\n              onChange={handleUrlChange} \r\n              placeholder=\"https://example.com\" \r\n              sx={{ mb: 2 }} \r\n            />\r\n            {url && <Typography>URL Entered: <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a></Typography>}\r\n          </Box>\r\n        )}\r\n\r\n        {inputType === \"image\" && (\r\n          <Box>\r\n            <input accept=\"image/*\" type=\"file\" onChange={handleFileChange} style={{ margin: '10px 0' }} />\r\n            {preview && <img src={preview} alt=\"Preview\" style={{ width: '100%', height: 'auto' }} />}\r\n          </Box>\r\n        )}\r\n\r\n        {inputType === \"pdf\" && (\r\n          <Box>\r\n            <input accept=\"application/pdf\" type=\"file\" onChange={handleFileChange} style={{ margin: '10px 0' }} />\r\n            {preview && <Typography>{preview}</Typography>}\r\n          </Box>\r\n        )}\r\n\r\n        {inputType === \"txt\" && (\r\n          <Box>\r\n            <input accept=\".txt\" type=\"file\" onChange={handleFileChange} style={{ margin: '10px 0' }} />\r\n            {preview && <Typography>File Preview: {preview}</Typography>}\r\n          </Box>\r\n        )}\r\n\r\n        <Box sx={{ mt: 4 }}>\r\n          <Button variant=\"outlined\" color=\"secondary\" fullWidth onClick={handleGenerate} >\r\n            Load Data\r\n          </Button>\r\n      \r\n          <Button variant=\"outlined\" color=\"secondary\" fullWidth sx={{ mt: 2 }} onClick={handleCreate}>\r\n            Generate Summary\r\n          </Button>\r\n          \r\n          <Button variant=\"outlined\" color=\"secondary\" fullWidth sx={{ mt: 2 }} onClick={handleDrawMindMap} >\r\n            Draw Mind Map\r\n          </Button>\r\n          {showUrlButton && (\r\n            <Button variant=\"outlined\" color=\"secondary\" fullWidth sx={{ mt: 2 }} href=\"https://firebasestorage.googleapis.com/v0/b/mindmapwebsitepdf.appspot.com/o/mindmap%2Fmind_map.png?alt=media&token=f9d85688-56e2-4150-b081-53731fbabd96\" target=\"_blank\">\r\n              View Mind Map\r\n            </Button>\r\n          )}\r\n          \r\n        </Box>\r\n        {loading && <Typography sx={{ mt: 2}}>{loadingComment}</Typography>}\r\n      </Card>\r\n\r\n      {/* Summary Section */}\r\n      <Card \r\n        variant=\"outlined\" \r\n        sx={{ \r\n          width: 'auto',         // Auto width to expand based on content\r\n          maxWidth: '2200px',    // Set a maximum width if needed\r\n          padding: 7, \r\n          borderRadius: 4, \r\n          boxShadow: 2,\r\n          overflowX: 'auto',     // Enable horizontal scrolling\r\n          overflowY: 'hidden',   // Disable vertical scrolling\r\n          flex: 1,               // Adjust to fill the space\r\n          whiteSpace: 'nowrap',  // Prevent text from wrapping, forcing horizontal scroll\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Summary\r\n        </Typography>\r\n        <pre>{summary}</pre>\r\n        \r\n      </Card>\r\n      <Dialog\r\n  open={openDialog}\r\n  onClose={handleCloseDialog}\r\n  PaperProps={{\r\n    sx: {\r\n      borderRadius: 4, // Rounded corners\r\n      padding: 3, // Adds padding for spacing\r\n      boxShadow: '0px 8px 24px rgba(0, 0, 0, 0.15)', // Elegant shadow\r\n      maxWidth: '500px', // Set max width\r\n      backgroundColor: '#f4f6f8', // Light background color\r\n      transition: 'all 0.3s ease-in-out', // Smooth transition\r\n    },\r\n  }}\r\n  TransitionProps={{\r\n    onEnter: () => console.log('Entering...'),\r\n  }}\r\n>\r\n  <DialogTitle sx={{ \r\n    textAlign: 'center', \r\n    fontSize: '1.5rem', \r\n    fontWeight: '600', \r\n    color: '#333',\r\n    paddingBottom: '0.5rem',\r\n    fontFamily: 'Poppins'\r\n  }}>\r\n    🎉 Mission Accomplished!\r\n  </DialogTitle>\r\n\r\n  <DialogContent>\r\n    <Box \r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        gap: 2,\r\n      }}\r\n    >\r\n      <Typography\r\n        sx={{\r\n          textAlign: 'center',\r\n          fontSize: '1.1rem',\r\n          color: '#666',\r\n          fontFamily: 'Poppins'\r\n        }}\r\n      >\r\n        {message}\r\n      </Typography>\r\n    </Box>\r\n  </DialogContent>\r\n\r\n  <DialogActions\r\n    sx={{\r\n      justifyContent: 'center', // Centers the button horizontally\r\n    }}\r\n  >\r\n    <Button\r\n      onClick={handleCloseDialog}\r\n      sx={{\r\n        backgroundColor: '#1976d2', // Primary color\r\n        color: '#fff', // White text\r\n        borderRadius: '20px', // Rounded button\r\n        padding: '0.5rem 1.5rem',\r\n        '&:hover': {\r\n          backgroundColor: '#1565c0', // Darker blue on hover\r\n        },\r\n        fontSize: '1rem', // Make text larger\r\n        textTransform: 'none', // Keep button text normal\r\n        boxShadow: '0px 4px 12px rgba(0, 0, 0, 0.2)', // Button shadow\r\n      }}\r\n    >\r\n      OK\r\n    </Button>\r\n  </DialogActions>\r\n</Dialog>\r\n\r\n    </Box>\r\n  </>\r\n);\r\n}\r\n\r\nexport default MainApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
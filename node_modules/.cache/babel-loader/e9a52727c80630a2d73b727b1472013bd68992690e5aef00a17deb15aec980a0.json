{"ast":null,"code":"var _jsxFileName = \"D:\\\\import-file-app-new\\\\import-file-app\\\\src\\\\MainApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, MenuItem, Select, InputLabel, FormControl, Button, TextField, Card, Typography, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport axios from 'axios';\nimport { getStorage, ref, getDownloadURL } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MainApp() {\n  _s();\n  const [inputType, setInputType] = useState(\"pdf\");\n  const [file, setFile] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const [openDialog, setOpenDialog] = useState(false);\n  const [preview, setPreview] = useState(\"\");\n  const [loading, setLoading] = useState(false); // Loading state\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Error message\n  const [message, setMessage] = useState('');\n  const [showUrlButton, setShowUrlButton] = useState(false);\n  const [showDownloadButton, setShowDownloadButton] = useState(false);\n  const [showSummaryButton, setShowSummaryButton] = useState(false);\n  const [loadingComment, setLoadingComment] = useState(\"\");\n  const [summary, setSummary] = useState(`Welcome to MindMesh.\n\nFeatures:\n    - Upload PDFs, images, URLs or text files.\n    - Generate summaries with ease.\n    - Create mind maps from summarized content.\n\nInstructions:\n    1. Choose your input method.\n    2. Upload your file or enter a URL.\n    3. Click 'Generate Summary' to view a concise description.\n    4. Draw and download the mind map of your summary.`);\n  const handleInputChange = event => {\n    setInputType(event.target.value);\n    setFile(null);\n    setUrl(\"\");\n    setPreview(\"\");\n    setErrorMessage(\"\"); // Reset error message\n  };\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n    setErrorMessage(\"\"); // Reset error message\n\n    if (inputType === \"image\") {\n      const imageUrl = URL.createObjectURL(selectedFile);\n      setPreview(imageUrl);\n    } else if (inputType === \"txt\") {\n      const reader = new FileReader();\n      reader.onload = () => setPreview(reader.result);\n      reader.readAsText(selectedFile);\n    } else if (inputType === \"pdf\") {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setPreview(\"PDF file uploaded: \" + selectedFile.name);\n      };\n      reader.readAsArrayBuffer(selectedFile);\n    }\n  };\n  const handleUrlChange = event => {\n    setUrl(event.target.value);\n    setPreview(event.target.value);\n    setErrorMessage(\"\"); // Reset error message\n  };\n  const handleGenerate = async () => {\n    setLoading(true); // Set loading state\n    setLoadingComment(\"Preparing your data for analysis...\");\n    setErrorMessage(\"\"); // Reset error message\n\n    try {\n      if (inputType === \"pdf\" && file) {\n        const formData = new FormData();\n        formData.append(\"pdf\", file);\n        await axios.post(\"http://localhost:5000/upload-pdf\", formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setMessage(`PDF file \"${file.name}\" uploaded successfully.`);\n        setOpenDialog(true);\n      } else if (inputType === \"url\" && url) {\n        const response = await axios.post(\"http://localhost:5000/scrape\", {\n          url\n        });\n        const blob = new Blob([response.data], {\n          type: \"text/plain\"\n        });\n        const link = document.createElement(\"a\");\n        link.href = window.URL.createObjectURL(blob);\n        link.download = \"scraped_data.txt\";\n        link.click();\n        setMessage(\"URL data scraped and downloaded successfully.\");\n        setOpenDialog(true);\n      } else if (inputType === \"image\" && file) {\n        const formData = new FormData();\n        formData.append(\"image\", file);\n        await axios.post(\"http://localhost:5000/extract-text\", formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert(`Image \"${file.name}\" uploaded successfully.`);\n      } else if (inputType === \"txt\" && file) {\n        const formData = new FormData();\n        formData.append(\"txt\", file);\n        await axios.post(\"http://localhost:5000/upload-txt\", formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert(`Text file \"${file.name}\" uploaded successfully.`);\n      } else {\n        alert(\"Please upload a file or enter a URL.\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setErrorMessage(\"Failed to process your request. Please try again.\");\n    } finally {\n      setLoading(false); // Reset loading state\n      setInputType(\"\"); // Reset input type\n      setFile(null); // Reset file\n      setUrl(\"\"); // Reset URL\n      setPreview(\"\"); // Reset preview\n    }\n  };\n  const handleCreate = async () => {\n    setLoading(true); // Set loading state\n    setLoadingComment(\"Summarizing the content...\");\n    setErrorMessage(\"\"); // Reset error message\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/run-process-file\");\n      setSummary(response.data);\n      // Show success message or output\n      setShowSummaryButton(true);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setErrorMessage(\"Failed to run the process. Please try again.\");\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  const handleDrawMindMap = async () => {\n    setLoading(true);\n    setLoadingComment(\"Drawing your mind map...\");\n    setErrorMessage(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/generate-mind-map\");\n      alert(response.data.message); // Show success message or output\n      setShowUrlButton(true);\n      setShowDownloadButton(true);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setErrorMessage(\"Failed to generate mind map. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /*const handleViewSummary = async () => {\r\n    setLoading(true);\r\n    setErrorMessage(\"\");\r\n  \r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/get-summary\");\r\n      setSummary(response.data);\r\n      // You can remove the alert line to avoid popups\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setErrorMessage(\"Failed to retrieve summary. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };*/\n\n  // Call this function on the appropriate event, like onClick\n  const handleCloseDialog = () => {\n    setOpenDialog(false); // Close the dialog\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"MindMesh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'flex-start',\n        minHeight: '100vh',\n        padding: 14,\n        maxWidth: 1800,\n        margin: 'auto',\n        gap: 14\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        sx: {\n          padding: 7,\n          borderRadius: 4,\n          boxShadow: 2,\n          width: '100%',\n          flex: 1,\n          // Adjust to fill the space\n          mr: 2 // Margin to the right\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-around',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: inputType === \"pdf\" ? \"contained\" : \"outlined\",\n            color: \"secondary\",\n            onClick: () => setInputType(\"pdf\"),\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              minWidth: '40px',\n              minHeight: '20px',\n              fontSize: '14px',\n              textTransform: 'none',\n              fontFamily: 'Poppins, sans-serif'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: require('./images/pd.png') // Replace with the correct path to your image\n              ,\n              alt: \"PDF\",\n              style: {\n                width: '40px',\n                height: '40px',\n                marginBottom: '5px'\n              } // Style the image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 13\n            }, this), \"PDF\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: inputType === \"url\" ? \"contained\" : \"outlined\",\n            color: \"secondary\",\n            onClick: () => setInputType(\"url\"),\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: '14px',\n              textTransform: 'none',\n              fontFamily: 'Poppins, sans-serif'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: require('./images/search-engine.png') // Replace with the correct path to your image\n              ,\n              alt: \"PDF\",\n              style: {\n                width: '40px',\n                height: '40px',\n                marginBottom: '5px'\n              } // Style the image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 13\n            }, this), \"URL\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: inputType === \"image\" ? \"contained\" : \"outlined\",\n            color: \"secondary\",\n            onClick: () => setInputType(\"image\"),\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: '14px',\n              textTransform: 'none',\n              fontFamily: 'Poppins, sans-serif'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: require('./images/image-file.png') // Replace with the correct path to your image\n              ,\n              alt: \"PDF\",\n              style: {\n                width: '40px',\n                height: '40px',\n                marginBottom: '5px'\n              } // Style the image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 13\n            }, this), \"Image\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: inputType === \"txt\" ? \"contained\" : \"outlined\",\n            color: \"secondary\",\n            onClick: () => setInputType(\"txt\"),\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: '14px',\n              textTransform: 'none',\n              fontFamily: 'Poppins, sans-serif'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: require('./images/image.png') // Replace with the correct path to your image\n              ,\n              alt: \"PDF\",\n              style: {\n                width: '40px',\n                height: '40px',\n                marginBottom: '5px'\n              } // Style the image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 14\n            }, this), \"Text\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this), inputType === \"url\" && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Enter Website URL\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: url,\n            onChange: handleUrlChange,\n            placeholder: \"https://example.com\",\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), url && /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"URL Entered: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), inputType === \"image\" && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/*\",\n            type: \"file\",\n            onChange: handleFileChange,\n            style: {\n              margin: '10px 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), preview && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: preview,\n            alt: \"Preview\",\n            style: {\n              width: '100%',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), inputType === \"pdf\" && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"application/pdf\",\n            type: \"file\",\n            onChange: handleFileChange,\n            style: {\n              margin: '10px 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), preview && /*#__PURE__*/_jsxDEV(Typography, {\n            children: preview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), inputType === \"txt\" && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \".txt\",\n            type: \"file\",\n            onChange: handleFileChange,\n            style: {\n              margin: '10px 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), preview && /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"File Preview: \", preview]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            fullWidth: true,\n            onClick: handleGenerate,\n            disabled: loading,\n            children: \"Load Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            fullWidth: true,\n            sx: {\n              mt: 2\n            },\n            onClick: handleCreate,\n            children: \"Generate Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            fullWidth: true,\n            sx: {\n              mt: 2\n            },\n            onClick: handleDrawMindMap,\n            disabled: loading,\n            children: \"Draw Mind Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 11\n          }, this), showUrlButton && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            fullWidth: true,\n            sx: {\n              mt: 2\n            },\n            href: \"https://firebasestorage.googleapis.com/v0/b/mindmapwebsitepdf.appspot.com/o/mindmap%2Fmind_map.png?alt=media&token=f9d85688-56e2-4150-b081-53731fbabd96\",\n            target: \"_blank\",\n            children: \"View Mind Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 9\n        }, this), loading && /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mt: 2,\n            fontStyle: 'italic'\n          },\n          children: loadingComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        sx: {\n          width: 'auto',\n          // Auto width to expand based on content\n          maxWidth: '2200px',\n          // Set a maximum width if needed\n          padding: 7,\n          borderRadius: 4,\n          boxShadow: 2,\n          overflowX: 'auto',\n          // Enable horizontal scrolling\n          overflowY: 'hidden',\n          // Disable vertical scrolling\n          flex: 1,\n          // Adjust to fill the space\n          whiteSpace: 'nowrap' // Prevent text from wrapping, forcing horizontal scroll\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDialog,\n        onClose: handleCloseDialog,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseDialog,\n            color: \"primary\",\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(MainApp, \"hkmU2mBkBbV6WIEuICT4V9nLqVU=\");\n_c = MainApp;\nexport default MainApp;\nvar _c;\n$RefreshReg$(_c, \"MainApp\");","map":{"version":3,"names":["React","useState","Box","MenuItem","Select","InputLabel","FormControl","Button","TextField","Card","Typography","Dialog","DialogTitle","DialogContent","DialogActions","axios","getStorage","ref","getDownloadURL","jsxDEV","_jsxDEV","Fragment","_Fragment","MainApp","_s","inputType","setInputType","file","setFile","url","setUrl","openDialog","setOpenDialog","preview","setPreview","loading","setLoading","errorMessage","setErrorMessage","message","setMessage","showUrlButton","setShowUrlButton","showDownloadButton","setShowDownloadButton","showSummaryButton","setShowSummaryButton","loadingComment","setLoadingComment","summary","setSummary","handleInputChange","event","target","value","handleFileChange","selectedFile","files","imageUrl","URL","createObjectURL","reader","FileReader","onload","result","readAsText","name","readAsArrayBuffer","handleUrlChange","handleGenerate","formData","FormData","append","post","headers","response","blob","Blob","data","type","link","document","createElement","href","window","download","click","alert","error","console","handleCreate","handleDrawMindMap","handleCloseDialog","children","className","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","justifyContent","alignItems","minHeight","padding","maxWidth","margin","gap","variant","borderRadius","boxShadow","width","flex","mr","mb","color","onClick","flexDirection","minWidth","fontSize","textTransform","fontFamily","src","require","alt","style","height","marginBottom","label","fullWidth","onChange","placeholder","rel","accept","mt","disabled","fontStyle","overflowX","overflowY","whiteSpace","gutterBottom","open","onClose","_c","$RefreshReg$"],"sources":["D:/import-file-app-new/import-file-app/src/MainApp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, MenuItem, Select, InputLabel, FormControl, Button, TextField, Card, Typography, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\nimport axios from 'axios';\r\nimport { getStorage, ref, getDownloadURL } from \"firebase/storage\";\r\n\r\n\r\nfunction MainApp() {\r\n  const [inputType, setInputType] = useState(\"pdf\");\r\n  const [file, setFile] = useState(null);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [preview, setPreview] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);  // Loading state\r\n  const [errorMessage, setErrorMessage] = useState(\"\");  // Error message\r\n  const [message, setMessage] = useState('');\r\n  const [showUrlButton, setShowUrlButton] = useState(false); \r\n  const [showDownloadButton, setShowDownloadButton] = useState(false);\r\n  const [showSummaryButton, setShowSummaryButton] = useState(false); \r\n  const [loadingComment, setLoadingComment] = useState(\"\");\r\n  const [summary,setSummary] = useState(`Welcome to MindMesh.\r\n\r\nFeatures:\r\n    - Upload PDFs, images, URLs or text files.\r\n    - Generate summaries with ease.\r\n    - Create mind maps from summarized content.\r\n\r\nInstructions:\r\n    1. Choose your input method.\r\n    2. Upload your file or enter a URL.\r\n    3. Click 'Generate Summary' to view a concise description.\r\n    4. Draw and download the mind map of your summary.` );\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputType(event.target.value);\r\n    setFile(null);\r\n    setUrl(\"\");\r\n    setPreview(\"\");\r\n    setErrorMessage(\"\");  // Reset error message\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    setFile(selectedFile);\r\n    setErrorMessage(\"\");  // Reset error message\r\n\r\n    if (inputType === \"image\") {\r\n      const imageUrl = URL.createObjectURL(selectedFile);\r\n      setPreview(imageUrl);\r\n    } else if (inputType === \"txt\") {\r\n      const reader = new FileReader();\r\n      reader.onload = () => setPreview(reader.result);\r\n      reader.readAsText(selectedFile);\r\n    } else if (inputType === \"pdf\") {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        setPreview(\"PDF file uploaded: \" + selectedFile.name);\r\n      };\r\n      reader.readAsArrayBuffer(selectedFile);\r\n    }\r\n  };\r\n\r\n  const handleUrlChange = (event) => {\r\n    setUrl(event.target.value);\r\n    setPreview(event.target.value);\r\n    setErrorMessage(\"\");  // Reset error message\r\n  };\r\n\r\n  const handleGenerate = async () => {\r\n    setLoading(true);  // Set loading state\r\n    setLoadingComment(\"Preparing your data for analysis...\");\r\n    setErrorMessage(\"\");  // Reset error message\r\n\r\n    try {\r\n      if (inputType === \"pdf\" && file) {\r\n        const formData = new FormData();\r\n        formData.append(\"pdf\", file);\r\n        await axios.post(\"http://localhost:5000/upload-pdf\", formData, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n        setMessage(`PDF file \"${file.name}\" uploaded successfully.`);\r\n        setOpenDialog(true);\r\n\r\n      } else if (inputType === \"url\" && url) {\r\n        const response = await axios.post(\"http://localhost:5000/scrape\", { url });\r\n        const blob = new Blob([response.data], { type: \"text/plain\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = window.URL.createObjectURL(blob);\r\n        link.download = \"scraped_data.txt\";\r\n        link.click();\r\n        setMessage(\"URL data scraped and downloaded successfully.\");\r\n        setOpenDialog(true);\r\n      } else if (inputType === \"image\" && file) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n        await axios.post(\"http://localhost:5000/extract-text\", formData, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n        alert(`Image \"${file.name}\" uploaded successfully.`);\r\n\r\n      } else if (inputType === \"txt\" && file) {\r\n        const formData = new FormData();\r\n        formData.append(\"txt\", file);\r\n        await axios.post(\"http://localhost:5000/upload-txt\", formData, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n        alert(`Text file \"${file.name}\" uploaded successfully.`);\r\n      } else {\r\n        alert(\"Please upload a file or enter a URL.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setErrorMessage(\"Failed to process your request. Please try again.\");\r\n    } finally {\r\n      setLoading(false);  // Reset loading state\r\n      setInputType(\"\");  // Reset input type\r\n      setFile(null);  // Reset file\r\n      setUrl(\"\");  // Reset URL\r\n      setPreview(\"\");  // Reset preview\r\n    }\r\n  };\r\n\r\n  \r\n  const handleCreate = async () => {\r\n    setLoading(true);  // Set loading state\r\n    setLoadingComment(\"Summarizing the content...\");\r\n    setErrorMessage(\"\");  // Reset error message\r\n\r\n    try {\r\n        const response = await axios.post(\"http://localhost:5000/run-process-file\");\r\n        setSummary(response.data);\r\n         // Show success message or output\r\n        setShowSummaryButton(true);\r\n\r\n    } catch (error) {\r\n        console.error(\"Error:\", error);\r\n        setErrorMessage(\"Failed to run the process. Please try again.\");\r\n    } finally {\r\n        setLoading(false);  // Reset loading state\r\n    }\r\n};\r\n\r\n\r\nconst handleDrawMindMap = async () => {\r\n  setLoading(true);\r\n  setLoadingComment(\"Drawing your mind map...\");\r\n  setErrorMessage(\"\");\r\n\r\n  try {\r\n    const response = await axios.post(\"http://localhost:5000/generate-mind-map\");\r\n    alert(response.data.message);  // Show success message or output\r\n    setShowUrlButton(true);\r\n    setShowDownloadButton(true);\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    setErrorMessage(\"Failed to generate mind map. Please try again.\");\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n/*const handleViewSummary = async () => {\r\n  setLoading(true);\r\n  setErrorMessage(\"\");\r\n\r\n  try {\r\n    const response = await axios.get(\"http://localhost:5000/get-summary\");\r\n    setSummary(response.data);\r\n    // You can remove the alert line to avoid popups\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    setErrorMessage(\"Failed to retrieve summary. Please try again.\");\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};*/\r\n\r\n// Call this function on the appropriate event, like onClick\r\nconst handleCloseDialog = () => {\r\n  setOpenDialog(false);  // Close the dialog\r\n};\r\n\r\n\r\nreturn (\r\n  <>\r\n    <header className=\"header\">\r\n      <h1 className=\"logo\">MindMesh</h1>\r\n    </header>\r\n    <Box \r\n      sx={{ \r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'flex-start',\r\n        minHeight: '100vh', \r\n        padding: 14, \r\n        maxWidth: 1800, \r\n        margin: 'auto' ,\r\n        gap: 14\r\n      }}\r\n    >\r\n      <Card \r\n        variant=\"outlined\" \r\n        sx={{ \r\n          padding: 7,\r\n          borderRadius: 4, \r\n          boxShadow: 2,\r\n          width: '100%',\r\n          flex: 1, // Adjust to fill the space\r\n          mr: 2 // Margin to the right\r\n        }}\r\n      >\r\n         \r\n        \r\n        <Box sx={{ display: 'flex', justifyContent: 'space-around', mb: 3 }}>\r\n          <Button \r\n            variant={inputType === \"pdf\" ? \"contained\" : \"outlined\"} \r\n            color=\"secondary\" \r\n            onClick={() => setInputType(\"pdf\")}\r\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' ,minWidth: '40px',minHeight: '20px',fontSize: '14px',textTransform: 'none', fontFamily: 'Poppins, sans-serif'}}\r\n          >\r\n            <img \r\n              src={require('./images/pd.png')} // Replace with the correct path to your image\r\n              alt=\"PDF\"\r\n              style={{ width: '40px', height: '40px', marginBottom: '5px' }} // Style the image\r\n            />\r\n            PDF\r\n          </Button>\r\n          <Button \r\n            variant={inputType === \"url\" ? \"contained\" : \"outlined\"} \r\n            color=\"secondary\" \r\n            onClick={() => setInputType(\"url\")}\r\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center',fontSize: '14px',textTransform: 'none', fontFamily: 'Poppins, sans-serif' }}\r\n          >\r\n            <img \r\n              src={require('./images/search-engine.png')} // Replace with the correct path to your image\r\n              alt=\"PDF\"\r\n              style={{ width: '40px', height: '40px', marginBottom: '5px' }} // Style the image\r\n            />\r\n            URL\r\n          </Button>\r\n          <Button \r\n            variant={inputType === \"image\" ? \"contained\" : \"outlined\"} \r\n            color=\"secondary\" \r\n            onClick={() => setInputType(\"image\")}\r\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center',fontSize: '14px' ,textTransform: 'none', fontFamily: 'Poppins, sans-serif'}} \r\n          >\r\n            <img \r\n              src={require('./images/image-file.png')} // Replace with the correct path to your image\r\n              alt=\"PDF\"\r\n              style={{ width: '40px', height: '40px', marginBottom: '5px' }} // Style the image\r\n            />\r\n            Image\r\n          </Button>\r\n          <Button \r\n            variant={inputType === \"txt\" ? \"contained\" : \"outlined\"} \r\n            color=\"secondary\" \r\n            onClick={() => setInputType(\"txt\")}\r\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center',fontSize: '14px',textTransform: 'none', fontFamily: 'Poppins, sans-serif' }} \r\n          >\r\n             <img \r\n              src={require('./images/image.png')} // Replace with the correct path to your image\r\n              alt=\"PDF\"\r\n              style={{ width: '40px', height: '40px', marginBottom: '5px' }} // Style the image\r\n            />\r\n            Text\r\n          </Button>\r\n        </Box>\r\n\r\n        {inputType === \"url\" && (\r\n          <Box>\r\n            <TextField \r\n              label=\"Enter Website URL\" \r\n              variant=\"outlined\" \r\n              fullWidth \r\n              value={url} \r\n              onChange={handleUrlChange} \r\n              placeholder=\"https://example.com\" \r\n              sx={{ mb: 2 }} \r\n            />\r\n            {url && <Typography>URL Entered: <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a></Typography>}\r\n          </Box>\r\n        )}\r\n\r\n        {inputType === \"image\" && (\r\n          <Box>\r\n            <input accept=\"image/*\" type=\"file\" onChange={handleFileChange} style={{ margin: '10px 0' }} />\r\n            {preview && <img src={preview} alt=\"Preview\" style={{ width: '100%', height: 'auto' }} />}\r\n          </Box>\r\n        )}\r\n\r\n        {inputType === \"pdf\" && (\r\n          <Box>\r\n            <input accept=\"application/pdf\" type=\"file\" onChange={handleFileChange} style={{ margin: '10px 0' }} />\r\n            {preview && <Typography>{preview}</Typography>}\r\n          </Box>\r\n        )}\r\n\r\n        {inputType === \"txt\" && (\r\n          <Box>\r\n            <input accept=\".txt\" type=\"file\" onChange={handleFileChange} style={{ margin: '10px 0' }} />\r\n            {preview && <Typography>File Preview: {preview}</Typography>}\r\n          </Box>\r\n        )}\r\n\r\n        <Box sx={{ mt: 4 }}>\r\n          <Button variant=\"outlined\" color=\"secondary\" fullWidth onClick={handleGenerate} disabled={loading}>\r\n            Load Data\r\n          </Button>\r\n      \r\n          <Button variant=\"outlined\" color=\"secondary\" fullWidth sx={{ mt: 2 }} onClick={handleCreate}>\r\n            Generate Summary\r\n          </Button>\r\n          \r\n          <Button variant=\"outlined\" color=\"secondary\" fullWidth sx={{ mt: 2 }} onClick={handleDrawMindMap} disabled={loading}>\r\n            Draw Mind Map\r\n          </Button>\r\n          {showUrlButton && (\r\n            <Button variant=\"outlined\" color=\"secondary\" fullWidth sx={{ mt: 2 }} href=\"https://firebasestorage.googleapis.com/v0/b/mindmapwebsitepdf.appspot.com/o/mindmap%2Fmind_map.png?alt=media&token=f9d85688-56e2-4150-b081-53731fbabd96\" target=\"_blank\">\r\n              View Mind Map\r\n            </Button>\r\n          )}\r\n          \r\n        </Box>\r\n        {loading && <Typography sx={{ mt: 2, fontStyle: 'italic' }}>{loadingComment}</Typography>}\r\n      </Card>\r\n\r\n      {/* Summary Section */}\r\n      <Card \r\n        variant=\"outlined\" \r\n        sx={{ \r\n          width: 'auto',         // Auto width to expand based on content\r\n          maxWidth: '2200px',    // Set a maximum width if needed\r\n          padding: 7, \r\n          borderRadius: 4, \r\n          boxShadow: 2,\r\n          overflowX: 'auto',     // Enable horizontal scrolling\r\n          overflowY: 'hidden',   // Disable vertical scrolling\r\n          flex: 1,               // Adjust to fill the space\r\n          whiteSpace: 'nowrap',  // Prevent text from wrapping, forcing horizontal scroll\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Summary\r\n        </Typography>\r\n        <pre>{summary}</pre>\r\n        \r\n      </Card>\r\n      <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n          <DialogTitle>Information</DialogTitle>\r\n          <DialogContent>\r\n            <Typography>{message}</Typography>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleCloseDialog} color=\"primary\">OK</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n    </Box>\r\n  </>\r\n);\r\n}\r\n\r\nexport default MainApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}